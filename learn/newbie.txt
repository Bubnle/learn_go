GO 语言结构
1.go语言的基础组成有几个部分
    包声明
    引入包
    函数
    变量
    语句 & 表达式
    注释
eg :
package main
import "fmt"

func main(){
    /*     remark    */
    fmt.Println("Hello , World!")   // 自动换行
}
2.
运行 go run + file.go
生成二进制可执行文件exe go build + file.go
得到了 hello
./hello 就可以运行

3.
    3.1
    重点同一个文件下面只能有一个包名！！！！！！！！！！！！
    就是在最开始package 包声明的那里！！！！
    这意味着属于这个包
    3.2
    文件名与包名没有直接关系，不一定要将文件名与包名定成同一个。
    文件夹名与包名没有直接关系，并非需要一致。


go 语言必须要有一个 package main 且 main 函数必须在这个文件夹下，并且同一个目
录下只能使用一个 package 名字，注意，main 是无法被导入的

4.基础语法
1) 标识符以字母或者下划线开头的
2) 不用加分号 除非一行有多个
3) 字符串链接 通过+实现

5.数据类型
1) 布尔型 var b bool
2) 数字类型  int float
3) 字符串 string
4) 派生类型
    (a) 指针类型（Pointer）
    (b) 数组类型
    (c) 结构化类型(struct)
    (d) Channel 类型
    (e) 函数类型
    (f) 切片类型
    (g) 接口类型（interface）
    (h) Map 类型
6.语言变量
1)Go 语言最好是以 驼峰命名法
2)变量的声明
    (a)
    var id type   单个变量
    var id , id1 type  同一个类型的多个变量

    var id type1
    var id2 type2 不同类型的放在不同的行
    (b)
    根据值自行判断变量类型
    var id = value
    (c)
    其中 := 就是声明
    :=就是声明！！！！！
    可以直接 id := "123"  // 只能出现在函数体里面
    就相当于	var p int = 9999
    (d)
    var(
        id type1
        id2 type2
    )
    这种写法一般用于声明全局变量
3)值类型和引用类型
